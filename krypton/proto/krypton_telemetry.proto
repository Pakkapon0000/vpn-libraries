// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package privacy.krypton;

import "google/protobuf/duration.proto";

option cc_api_version = 2;
option java_outer_classname = "TelemetryProto";
option java_package = "com.google.android.libraries.privacy.ppn.internal";
option java_api_version = 2;
option java_multiple_files = true;

// Next ID: 22
message KryptonTelemetry {
  // Provides latency for each individual Auth requests. Array size represents
  // the total auths that were done.
  repeated google.protobuf.Duration auth_latency = 1;

  // Provides latency for each AddEgressRequests. Array size represents the
  // total number of AddEgress that were called.
  repeated google.protobuf.Duration egress_latency = 2;

  optional uint32 successful_rekeys = 3;

  // The total number of network switching attempts.
  optional uint32 network_switches = 4;

  // The number of network switches followed by a downlink packet received.
  optional uint32 successful_network_switches = 13;

  // Provides latency for each network switch that is successful.
  repeated google.protobuf.Duration network_switch_latency = 14;

  // The number of times a client attempts provisioning.
  optional uint32 control_plane_attempts = 15;

  // The number of times the client is successfully provisioned.
  optional uint32 control_plane_successes = 16;

  // The number of times the control plane is disconnected. This is not
  // analogous with the control plane success rate, as control plane failues
  // may occur after the client is fully provisioned.
  optional uint32 control_plane_failures = 5;

  // Provides latency from start of provisioning until fully provisioned.
  repeated google.protobuf.Duration control_plane_success_latency = 17;

  // Provides latency from start of provisioning until failure.
  repeated google.protobuf.Duration control_plane_failure_latency = 18;

  // The number of times a datapath is found unusable. This is not analogous
  // to data_plane_connecting fields, as a datapath can fail after it was
  // previously connected.
  optional uint32 data_plane_failures = 6;

  optional uint32 session_restarts = 7;

  // Provides latency for each token getting operation during Auth
  // requests. Array size represents the total GetOAuthToken that were done.
  repeated google.protobuf.Duration oauth_latency = 8;

  // Provides latency for each token verification during Auth request.
  // Array size represents the total number of zinc_url that were called.
  repeated google.protobuf.Duration zinc_latency = 9;

  // The number of attempts to connect a datapath.
  optional uint32 data_plane_connecting_attempts = 10;

  // The number of times a datapath was successfully connected.
  optional uint32 data_plane_connecting_successes = 11;

  // Provides latency from start of connecting a datapath until fully connected.
  repeated google.protobuf.Duration data_plane_connecting_latency = 12;

  // The number of times a health check is performed.
  optional uint32 health_check_attempts = 19;

  // The number of times a health check confirms connection.
  optional uint32 health_check_successes = 20;

  // The number of times anonymous token unblinding fails, leading to
  // authentication failure.
  optional uint32 token_unblind_failure_count = 21;
}
