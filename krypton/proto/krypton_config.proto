// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package privacy.krypton;

import "google/protobuf/duration.proto";
import "privacy/net/common/proto/ppn_options.proto";

option cc_api_version = 2;
option java_outer_classname = "ConfigProto";
option java_package = "com.google.android.libraries.privacy.ppn.internal";
option java_api_version = 2;
option java_multiple_files = true;

// Configuration for reconnection.
message ReconnectorConfig {
  reserved 2, 4, 5;

  // Initial time between reconnects. Note that exponential factor is added
  // every time.
  optional uint32 initial_time_to_reconnect_msec = 1;

  // Deadline for a session to be established.
  optional uint32 session_connection_deadline_msec = 3;
}

// Next ID: 40
message KryptonConfig {
  reserved 5, 7, 10, 13, 24;

  // TODO: Clean up name of zinc_url.
  optional string zinc_url = 1;
  optional string zinc_public_signing_key_url = 11;
  optional string brass_url = 2;
  optional string service_type = 3;
  optional string initial_data_url = 31;
  optional string update_path_info_url = 32;

  optional ReconnectorConfig reconnector_config = 4;

  // Could be DNS address or v4/v6 address of the copper controller.
  optional string copper_controller_address = 6;
  // For tests and probers, this overrides the copper_controller_address
  // and the copper hostname from zinc
  // and influence the control_plane_sock_addr sent to brass.
  optional string copper_hostname_override = 17;
  // Used to validate a copper hostname domain from backend.
  repeated string copper_hostname_suffix = 16;

  // AES128 to AES256 in bits.  128 or 16 bytes is for AES128. 256 or 32 bytes
  // is for AES256.
  optional uint32 cipher_suite_key_length = 8;
  // Duration between Rekeys. Defaulted to 1 day = 24 * 3600
  optional google.protobuf.Duration rekey_duration = 9;

  optional bool enable_blind_signing = 12;

  // Whether Krypton should enable Safe Disconnect on startup.
  optional bool safe_disconnect_enabled = 14;

  enum DatapathProtocol {
    DEFAULT = 0;
    IPSEC = 1;
    BRIDGE = 2;
    IKE = 3;
  }
  optional DatapathProtocol datapath_protocol = 15;

  // Whether or not periodic health check is enabled.
  optional bool periodic_health_check_enabled = 18;
  // Duration between periodic health check.
  optional google.protobuf.Duration periodic_health_check_duration = 19;
  // Where to connect to perform the health check
  optional string periodic_health_check_url = 35;
  optional uint32 periodic_health_check_port = 36;

  // Whether or not to allow PPN to use IPv6 to connect to copper. If this is
  // false, then PPN will always use IPv4.
  optional bool ipv6_enabled = 20;

  // In iOS, whether to use the datapath implemented in Objective-C++, rather
  // than the cross-platform C++ datapath.
  optional bool use_objc_datapath = 21;
  // In iOS, whether to run the uplink path in parallel, as opposed to serially.
  optional bool ios_uplink_parallelism_enabled = 22;

  // Whether or not to attest during auth and rekey step.
  optional bool integrity_attestation_enabled = 23;

  // Google Cloud API key used to differentiate client types
  optional string api_key = 25;

  // If true, attaches the OAuth token as the "Authorization" header.
  // If false, OAuth token is passed in the json body.
  optional bool attach_oauth_token_as_header = 26;

  // Whether to enable dynamic mtu features.
  optional bool dynamic_mtu_enabled = 27;

  // Duration of inactivity after which we will send a keepalive packet when
  // connected with IPsec on IPv4.
  optional google.protobuf.Duration ipv4_keepalive_interval = 28;
  // Duration of inactivity after which we will send a keepalive packet when
  // connected with IPsec on IPv6.
  optional google.protobuf.Duration ipv6_keepalive_interval = 29;

  // Enabling public metadata determines use of GetInitialData vs PublicKey RPC
  // in session auth, as well as which fields are populated in AddEgressRequest.
  optional bool public_metadata_enabled = 30;

  optional privacy.ppn.IpGeoLevel ip_geo_level = 33;

  // This flag allows Phosphor to return Public Metadata with debug_mode = true.
  // If this flag is set to false, any Public Metadata with debug_mode = true
  // will be rejected.
  optional bool debug_mode_allowed = 34;

  // Fields for configuring the datapath connecting timer.
  optional bool datapath_connecting_timer_enabled = 37;
  optional google.protobuf.Duration datapath_connecting_timer_duration = 38;

  // Client hint for whether Oasis is the preferred dataplane provider.
  // Beryllium may still elect to use another provider even if this is true.
  optional bool prefer_oasis = 39;
}
